Changelog
    Milestone 1:
        -Basic End-to-End of Dungeon Level 1
        -Inventory
        -Rooms
        -Doors
        -Locks
        -Using Keys on Doors
        -Picking Up Items

    Milestone 2:
        -Ported project to github.    
        -Item Expansion!        
            -Decided on item directory format.
            -REFACTOR: Support itemID vs display name
            -Add Item Directory Object (support all current items?)
            -Inspect Items -> read itemDesc property
            -Inspect current room -> Display description
            -Use Items that aren't Keys
            -Add "readContents" property to items
                -Add Spellbook Item Description
                -Teach Players About Teleporting!
        Room Expansion 
            -TECH DEBT: Refactor roomList to use better format
        -Engine
            -Develop Commander/Lieutenant, a translation layer from input --> game actions
                -Fix Commander's fragility to caps
            -Added "New Game" command to allow a restart of the game.
            -Add "Say" command
            -Add "Help" command

TODO
    -User Input + Core Game Loop (User Input --> Game Does a Thing --> Ask for New Input )
        -Implement Seer
        -New Game —> Dungeon Master asks “wdyd” —> user types —> commander processes command —> lieutenant executes command (with Seer’s help if additional info needed) —> check for events firing —> dungeon master displays text and asks “wdyd”
    -Dynamic Events (Events triggered on something happening)
    -Refactor: Figure out how to prompt for additional info for use-key.
    -Add buffs/debuffs to player (Cleanliness in assessment room)
        -System needs a concept of time
        -How do rooms/things check buffs/debuffs?
            -Add game tick function at the end of a play cycle.
                -Reduce timers on buffs/debuffs
                -Regain mana?
    -Dungeon Expansion 1 - The Ancient Temple!
        -Add rooms in temple to roomlist (per readme file)
        -Flesh out room descriptions in RoomList
        -Add items needed for temple to itemList
        -Secret doors.
            -Permanently modify room descriptions depending on door being detected.
            -How to detect door?
            -If exit through a door, unlock behind you?
        -Assessment Room
            -Refactor key check to make the final unlock a function
            -Write a test event that manipulates a lock with not-a-key, which ideally calls the unlock function at the end.
            -Give the player a buffList, which gains and loses buffs/debuffs on various conditions. Basically a second inventory for non-physical things.
            -Way to get the buff in question
            -Way to trigger the test event
        -Solve puzzles!
            -Sphinx's Riddle
            -Shrine of the Silver Monkey


    Milestone 3:
        -Menu screen on load
            -New Game, Load Game, Exit
        -Add ability to Save game
        -Add Game Over condition. --> Back to Menu
        -Build out external(?) Test Suite
        -Abilities and Spells?
        
        
    Milestone 4+:
        -NPCs!
            -Conversations and conversation trees
            -Vendors
            -Add Money
        -Combat System
            -Player needs stats
            -Equipment
            -Inventory needs quantity
                -Refactor pickUpItem to have quantity handling
                -Money handled specially





//Game Engine Notes
//get node package manager
//aka npm
//prompt-sync
